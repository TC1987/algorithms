int search(int* nums, int numsSize, int target){
    // find where the array is rotated from (i.e find the starting index)
    // use normal binary search
    if (numsSize == 0 || !nums) {
        return -1;
    }
    
    int left = 0;
    int right = numsSize - 1;
    int middle;
    
    while (left < right) {
        middle = left + ((right - left) / 2);
        if (nums[middle] > nums[right]) {
            left = middle + 1;
        } else {
            right = middle;
        }
    }
    
    int start = left;
    left = 0;
    right = numsSize - 1;
    
    if (target >= nums[start] && target <= nums[right]) {
        left = start;
    } else {
        right = start;
    }
    
    while (left <= right) {
        middle = left + ((right - left) / 2);
        if (nums[middle] > target) {
            right = middle - 1;
        } else if (nums[middle] < target) {
            left = middle + 1;
        } else {
            return middle;
        }
    }
    
    return -1;
}
